openapi: 3.0.3
info:
  title: JAイナバ売上管理サイト
  version: latest
servers:
  - url: http://jainner.kakinohatei.com/api/
    description: プロダクション API
  - url: http://localhost/api/
    description: 開発用
tags:
  - name: sales
    description: 売上の管理
  - name: year
  - name: month
  - name: week
  - name: day
  - name: store
  - name: product

paths:
  /sales/year/{year}:
    get:
      tags:
        - sales
        - year
      summary: 1年間の売上を確認する
      description: 選択した年の売上を月ごとに集計する
      operationId: getYearlySales
      parameters:
        - name: year
          in: path
          description: 取得する年 (YYYY 形式)
          required: true
          schema:
            type: string
            pattern: "^[0-9]{4}$"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: リクエストが無効です。年の形式が正しくありません。
        '404':
          description: 指定された年の売上データが見つかりません。
        '500':
          description: サーバーエラー。売上データの取得に失敗しました。

  /sales/year/{year}/store:
    get:
      tags:
        - sales
        - year
        - store
      summary: 1年間の売上を店舗ごとに確認する
      operationId: getYearlySalesByStoress
      parameters:
        - name: year
          in: path
          description: 取得する年 (YYYY 形式)
          required: true
          schema:
            type: string
            pattern: "^[0-9]{4}$"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: リクエストが無効です。年の形式が正しくありません。
        '404':
          description: 指定された年の売上データが見つかりません。
        '500':
          description: サーバーエラー。売上データの取得に失敗しました。

  /sales/year/{year}/product:
    get:
      tags:
        - sales
        - year
        - product
      summary: 1年間の売上を商品ごとに確認する
      operationId: getYearlySalesByProducts
      parameters:
        - name: year
          in: path
          description: 取得する年 (YYYY 形式)
          required: true
          schema:
            type: string
            pattern: "^[0-9]{4}$"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: リクエストが無効です。年の形式が正しくありません。
        '404':
          description: 指定された年の売上データが見つかりません。
        '500':
          description: サーバーエラー。売上データの取得に失敗しました。

  /sales/month/{year}/{month}:
    get:
      tags:
        - sales
        - month
      summary: １ヶ月の売上を確認する
      description: 選択した月の売上を日ごとに集計する
      operationId: getMonthlySales
      parameters:
        - name: year
          in: path
          description: 取得する年 (YYYY 形式)
          required: true
          schema:
            type: string
            pattern: "^[0-9]{4}$"
        - name: month
          in: path
          description: 取得する月 (MM 形式)
          required: true
          schema:
            type: string
            pattern: "^(0[1-9]|1[0-2])$"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: リクエストが無効です。月の形式が正しくありません。
        '404':
          description: 指定された月の売上データが見つかりません。
        '500':
          description: サーバーエラー。売上データの取得に失敗しました。

  /sales/month/{year}/{month}/store:
    get:
      tags:
        - sales
        - month
        - store
      summary: １ヶ月の売上を店舗ごとに確認する
      operationId: getMonthlySalesByStoress
      parameters:
        - name: year
          in: path
          description: 取得する年 (YYYY 形式)
          required: true
          schema:
            type: string
            pattern: "^[0-9]{4}$"
        - name: month
          in: path
          description: 取得する月 (MM 形式)
          required: true
          schema:
            type: string
            pattern: "^(0[1-9]|1[0-2])$"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: リクエストが無効です。月の形式が正しくありません。
        '404':
          description: 指定された月の売上データが見つかりません。
        '500':
          description: サーバーエラー。売上データの取得に失敗しました。

  /sales/month/{year}/{month}/product:
    get:
      tags:
        - sales
        - month
        - product
      summary: １ヶ月の売上を商品ごとに確認する
      operationId: getMonthlySalesByProducts
      parameters:
        - name: year
          in: path
          description: 取得する年 (YYYY 形式)
          required: true
          schema:
            type: string
            pattern: "^[0-9]{4}$"
        - name: month
          in: path
          description: 取得する月 (MM 形式)
          required: true
          schema:
            type: string
            pattern: "^(0[1-9]|1[0-2])$"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: リクエストが無効です。月の形式が正しくありません。
        '404':
          description: 指定された月の売上データが見つかりません。
        '500':
          description: サーバーエラー。売上データの取得に失敗しました。

  /sales/week/{year}/{month}/{day}:
    get:
      tags:
        - sales
        - week
      summary: 1週間の売上を確認する
      description: 選択した日付から７日間の売上を集計する
      operationId: getWeeklySales
      parameters:
        - name: year
          in: path
          description: 取得する年 (YYYY 形式)
          required: true
          schema:
            type: string
            pattern: "^[0-9]{4}$"
        - name: month
          in: path
          description: 取得する月 (MM 形式)
          required: true
          schema:
            type: string
            pattern: "^(0[1-9]|1[0-2])$"
        - name: day
          in: path
          description: 取得する週の始まりの日 (DD 形式)
          required: true
          schema:
            type: string
            pattern: "^(0[1-9]|[12][0-9]|3[01])$"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: リクエストが無効です。年、月、または日の形式が正しくありません。
        '404':
          description: 指定された週の売上データが見つかりません。
        '500':
          description: サーバーエラー。売上データの取得に失敗しました。

  /sales/week/{year}/{month}/{day}/store:
    get:
      tags:
        - sales
        - week
        - store
      summary: 1週間の売上を店舗ごとに確認する
      operationId: getWeeklySalesByStores
      parameters:
        - name: year
          in: path
          description: 取得する年 (YYYY 形式)
          required: true
          schema:
            type: string
            pattern: "^[0-9]{4}$"
        - name: month
          in: path
          description: 取得する月 (MM 形式)
          required: true
          schema:
            type: string
            pattern: "^(0[1-9]|1[0-2])$"
        - name: day
          in: path
          description: 取得する週の始まりの日 (DD 形式)
          required: true
          schema:
            type: string
            pattern: "^(0[1-9]|[12][0-9]|3[01])$"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: リクエストが無効です。年、月、または日の形式が正しくありません。
        '404':
          description: 指定された週の売上データが見つかりません。
        '500':
          description: サーバーエラー。売上データの取得に失敗しました。

  /sales/week/{year}/{month}/{day}/product:
    get:
      tags:
        - sales
        - week
        - product
      summary: 1週間の売上を商品ごとに確認する
      operationId: getWeeklySalesByProducts
      parameters:
        - name: year
          in: path
          description: 取得する年 (YYYY 形式)
          required: true
          schema:
            type: string
            pattern: "^[0-9]{4}$"
        - name: month
          in: path
          description: 取得する月 (MM 形式)
          required: true
          schema:
            type: string
            pattern: "^(0[1-9]|1[0-2])$"
        - name: day
          in: path
          description: 取得する週の始まりの日 (DD 形式)
          required: true
          schema:
            type: string
            pattern: "^(0[1-9]|[12][0-9]|3[01])$"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: リクエストが無効です。年、月、または日の形式が正しくありません。
        '404':
          description: 指定された週の売上データが見つかりません。
        '500':
          description: サーバーエラー。売上データの取得に失敗しました。

  /sales/day/{year}/{month}/{day}:
    get:
      tags:
        - sales
        - day
      summary: 1日の売上を確認する
      description: 1日の売上を時間ごとの確認する
      operationId: getDailySales
      parameters:
        - name: year
          in: path
          description: 取得する年 (YYYY 形式)
          required: true
          schema:
            type: string
            pattern: "^[0-9]{4}$"
        - name: month
          in: path
          description: 取得する月 (MM 形式)
          required: true
          schema:
            type: string
            pattern: "^(0[1-9]|1[0-2])$"
        - name: day
          in: path
          description: 取得する週の始まりの日 (DD 形式)
          required: true
          schema:
            type: string
            pattern: "^(0[1-9]|[12][0-9]|3[01])$"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: リクエストが無効です。年、月、または日の形式が正しくありません。
        '404':
          description: 指定された週の売上データが見つかりません。
        '500':
          description: サーバーエラー。売上データの取得に失敗しました。

  /sales/day/{year}/{month}/{day}/store:
    get:
      tags:
        - sales
        - day
        - store
      summary: 1日の売上を店舗ごとに確認する
      operationId: getDailySalesByStores
      parameters:
        - name: year
          in: path
          description: 取得する年 (YYYY 形式)
          required: true
          schema:
            type: string
            pattern: "^[0-9]{4}$"
        - name: month
          in: path
          description: 取得する月 (MM 形式)
          required: true
          schema:
            type: string
            pattern: "^(0[1-9]|1[0-2])$"
        - name: day
          in: path
          description: 取得する週の始まりの日 (DD 形式)
          required: true
          schema:
            type: string
            pattern: "^(0[1-9]|[12][0-9]|3[01])$"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: リクエストが無効です。年、月、または日の形式が正しくありません。
        '404':
          description: 指定された週の売上データが見つかりません。
        '500':
          description: サーバーエラー。売上データの取得に失敗しました。

  /sales/day/{year}/{month}/{day}/product:
    get:
      tags:
        - sales
        - day
        - product
      summary: 1日の売上を商品ごとに確認する
      operationId: getDailySalesByProducts
      parameters:
        - name: year
          in: path
          description: 取得する年 (YYYY 形式)
          required: true
          schema:
            type: string
            pattern: "^[0-9]{4}$"
        - name: month
          in: path
          description: 取得する月 (MM 形式)
          required: true
          schema:
            type: string
            pattern: "^(0[1-9]|1[0-2])$"
        - name: day
          in: path
          description: 取得する週の始まりの日 (DD 形式)
          required: true
          schema:
            type: string
            pattern: "^(0[1-9]|[12][0-9]|3[01])$"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: リクエストが無効です。年、月、または日の形式が正しくありません。
        '404':
          description: 指定された週の売上データが見つかりません。
        '500':
          description: サーバーエラー。売上データの取得に失敗しました。

components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        petId:
          type: integer
          format: int64
          example: 198772
        quantity:
          type: integer
          format: int32
          example: 7
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          example: approved
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
      xml:
        name: order
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        username:
          type: string
          example: fehguy
        address:
          type: array
          xml:
            name: addresses
            wrapped: true
          items:
            $ref: '#/components/schemas/Address'
      xml:
        name: customer
    Address:
      type: object
      properties:
        street:
          type: string
          example: 437 Lytton
        city:
          type: string
          example: Palo Alto
        state:
          type: string
          example: CA
        zip:
          type: string
          example: '94301'
      xml:
        name: address
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Dogs
      xml:
        name: category
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
      xml:
        name: user
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: doggie
        category:
          $ref: '#/components/schemas/Category'
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: pet
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
